version: '3.7'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    networks:
      red:
        ipv4_address: 10.5.0.1
    restart: always
    environment:
      DEFAULT_HOST: ${DOMAIN}
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      # - ./certs/certs:/etc/nginx/certs:ro
      # - ./certs/vhostd:/etc/nginx/vhost.d
      # - ./certs/html:/usr/share/nginx/html
    # labels:
    #   - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: nginx-proxy-companion
  #   networks:
  #     red:
  #       ipv4_address: 10.5.0.2
  #   restart: unless-stopped
  #   environment:
  #     - NGINX_PROXY_CONTAINER=nginx-proxy
  #     - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy
  #   volumes:
  #     - ./certs/certs:/etc/nginx/certs:rw
  #     - ./certs/vhostd:/etc/nginx/vhost.d
  #     - ./certs/html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro


  agent:
    image: newrelic/infrastructure:1.13.1-rc
    container_name: newrelic
    restart: always
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    env_file: ./config/newrelic.env
    restart: unless-stopped

  link_web:
    image: nginx:1.17.5-alpine
    container_name: link_web
    volumes:
      - ./web/public/:/var/www/html
      - ./web/config/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VIRTUAL_HOST=${DOMAIN}
    networks:
      red:
        ipv4_address: 10.5.0.12

networks:
  red:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/8